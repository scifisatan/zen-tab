name: Build & Release Extension
on:
  push:
    tags:
      - "v*"
permissions:
  contents: write
jobs:
  build:
    name: Build and Package Extensions
    runs-on: ubuntu-latest
    env:
      FIREFOX_API_KEY: ${{ secrets.FIREFOX_API_KEY }}
      FIREFOX_API_SECRET: ${{ secrets.FIREFOX_API_SECRET }}
      CHROME_KEY_B64: ${{ secrets.CHROME_KEY_B64 }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install

      - name: 🛡️ Reconstruct key.pem
        run: |
          echo "$CHROME_KEY_B64" | base64 -d > key.pem

      - name: 🔧 Build with Vite (Chrome)
        run: bun run build:chrome

      - name: 🔧 Build with Vite (Firefox)
        run: bun run build:firefox

      - name: 📦 Pack Chrome CRX and ZIP
        run: |
          VERSION=$(jq -r .version dist_chrome/manifest.json)
          EXTENSION_NAME="zen-tab"

          # Create Chrome ZIP file
          cd dist_chrome
          zip -r "../${EXTENSION_NAME}-chrome-${VERSION}.zip" .
          cd ..

          # Create Chrome CRX file
          bun add -g crx
          crx pack dist_chrome --private-key=key.pem

          echo "CHROME_ZIP_FILE_NAME=${EXTENSION_NAME}-chrome-${VERSION}.zip" >> $GITHUB_ENV

      - name: 🔐 Handle Firefox XPI (with fallback)
        run: |
          VERSION=$(jq -r .version dist_firefox/manifest.json)
          EXTENSION_NAME="zen-tab"

          # Always create a ZIP fallback
          cd dist_firefox
          zip -r "../${EXTENSION_NAME}-firefox-${VERSION}.zip" .
          cd ..

          # Try to sign XPI
          bun add -g web-ext
          if web-ext sign \
            --source-dir=dist_firefox \
            --api-key="$FIREFOX_API_KEY" \
            --api-secret="$FIREFOX_API_SECRET" \
            --channel="unlisted" \
            --amo-metadata=amo-metadata.json \
            --artifacts-dir=.; then
            
            echo "XPI_SIGNED=true" >> $GITHUB_ENV
            
            # Find and rename the generated XPI file
            XPI_FILE=$(find . -name "*.xpi" -type f | head -n 1)
            if [ -n "$XPI_FILE" ]; then
              mv "$XPI_FILE" "${EXTENSION_NAME}-firefox-${VERSION}.xpi"
              echo "XPI_FILE_NAME=${EXTENSION_NAME}-firefox-${VERSION}.xpi" >> $GITHUB_ENV
            fi
          else
            echo "XPI signing failed, will use ZIP fallback"
            echo "XPI_SIGNED=false" >> $GITHUB_ENV
          fi

          echo "ZIP_FILE_NAME=${EXTENSION_NAME}-firefox-${VERSION}.zip" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: 📤 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            zen-tab.crx
            ${{ env.CHROME_ZIP_FILE_NAME }}
            ${{ env.XPI_FILE_NAME }}
            ${{ env.ZIP_FILE_NAME }}
          body: |
            ## 🚀 Release Notes

            ### Installation Instructions

            **Chrome:**
            - **Recommended:** Download `zen-tab.crx` (signed extension)
            - **Alternative:** Download `${{ env.CHROME_ZIP_FILE_NAME }}` (unpacked version)

            **Firefox:**
            ${{ env.XPI_SIGNED == 'true' && format('- **Recommended:** Download `{0}` (signed XPI)', env.XPI_FILE_NAME) || '- **XPI signing failed** - using ZIP fallback' }}
            - **Fallback:** Download `${{ env.ZIP_FILE_NAME }}` and follow the Firefox installation guide

            ---
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
